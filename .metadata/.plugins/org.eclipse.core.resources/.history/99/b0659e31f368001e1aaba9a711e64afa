package com.ezen.myproject.controller;

import java.util.List;

import javax.inject.Inject;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import com.ezen.myproject.domain.BoardVO;
import com.ezen.myproject.domain.PagingVO;
import com.ezen.myproject.handler.PagingHandler;
import com.ezen.myproject.service.BoardService;

import lombok.extern.slf4j.Slf4j;

@Controller // 컨트롤러
@RequestMapping("/board/*")// 메핑
@Slf4j // 로그
public class BoardController {
	
	@Inject // 언어테이션으로 new 대신 생성해줌
	private BoardService bsv;
	
	
	@GetMapping("/register")
	public String boardRegisterGet() {
		return "/board/register";
	}
	
	
	/*
	 * @PostMapping("/register") public String register(BoardVO bvo) {
	 * log.info(">>>>>>>>"+bvo.toString()); int isOK = bsv.register(bvo);
	 * log.info(">>>> board register >>"+(isOK>0? "ok" : "fail")); return
	 * "redirect:/board/list"; }
	 */
	
	@PostMapping("/register")
	public String register(BoardVO bvo, @RequestParam(name="files")MultipartFile[] files) {
		log.info(">>>>>>>>"+bvo.toString());
		int isOK = bsv.register(bvo);
		log.info(">>>> board register >>"+(isOK>0? "ok" : "fail"));
		return "redirect:/board/list";
	}
	
	@GetMapping("/list")
	public String list(Model model, PagingVO pgvo) {
		log.info(">>>> pgvo" + pgvo);
		//getList(pgvo); 수정
		List<BoardVO> list = bsv.getPageList(pgvo);
//		log.info(">> get List >>>" + list);
		model.addAttribute("list", list);
		log.info("리스트" + list);
		
		int totalCount = bsv.getTotalCount(pgvo); // 등록
		log.info("to" + totalCount);
		PagingHandler ph = new PagingHandler(pgvo, totalCount);
		model.addAttribute("ph", ph);
		return "/board/list";
	}
	
	
	@GetMapping({"/detail", "/modify"})
	public void detail(Model model, @RequestParam("bno")int bno) {
		log.info(">>>>detail bno >>>" + bno);
		
		BoardVO bvo = bsv.getDetail(bno);
		model.addAttribute("bvo", bvo);
	}
	
	//수정할 떄 들어가는 부당 read_count 2개 빼주기
	
	@PostMapping("/modify")
	public String detail(BoardVO bvo, RedirectAttributes reAttr) {
		log.info(">>>>modify" + bvo);
		int isOK = bsv.modify(bvo);
		log.info(">>>> board modify >>"+(isOK>0? "ok" : "fail"));
		return "redirect:/board/detail?bno="+bvo.getBno();
	}
	
	@GetMapping("/remove")
	public String remove(@RequestParam("bno")int bno, RedirectAttributes reAttr) {
		log.info(">>>> remove bno >>>" + bno);
		int isOK = bsv.remove(bno);	
		return "redirect:/board/list";	
	}
}
